@page "/products/list"
@inherits ListProductsPage


<MudPaper Class="p-4" Elevation="1">

    <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mb-4">
        <MudText Typo="Typo.h5">📦 Lista de Produtos</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" OnClick="@CreateProduct">
            Novo Produto
        </MudButton>
    </MudStack>

    @if (Products is null)
    {
        <MudProgressCircular Indeterminate Color="Color.Primary" />
        <MudText Class="mt-2">🔄 Carregando produtos...</MudText>
    }
    else if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <MudAlert Severity="Severity.Error">@ErrorMessage</MudAlert>
    }
    else if (Products.Any())
    {
        <MudTable Items="Products" Elevation="0" Dense="true" Hover="true" Bordered="true">
            <HeaderContent>
                <MudTh>Nome</MudTh>
                <MudTh>Preço (R$)</MudTh>
                <MudTh>Estoque</MudTh>
                <MudTh align="right">Ações</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.Name</MudTd>
                <MudTd>@context.Price.ToString("C")</MudTd>
                <MudTd>@context.Stock</MudTd>
                <MudTd Align="Right">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="@(() => EditProduct(context.Id))" />
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(() => DeleteProduct(context.Id))" />
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
    else
    {
        <MudText Color="Color.Warning">⚠️ Nenhum produto encontrado.</MudText>
    }

</MudPaper>
